// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Online_sms.Models;

#nullable disable

namespace Online_sms.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20240710035236_i")]
    partial class i
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Online_sms.Models.Contact", b =>
                {
                    b.Property<int>("contact_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("contact_id"));

                    b.Property<int>("User_id")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("contact_id");

                    b.HasIndex("User_id");

                    b.ToTable("Contact");
                });

            modelBuilder.Entity("Online_sms.Models.Friend", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FriendUserUser_id")
                        .HasColumnType("int");

                    b.Property<int>("Friend_Id")
                        .HasColumnType("int");

                    b.Property<int>("User_Id")
                        .HasColumnType("int");

                    b.Property<bool>("isAccepted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("FriendUserUser_id");

                    b.HasIndex("User_Id");

                    b.ToTable("Friends");
                });

            modelBuilder.Entity("Online_sms.Models.Payment", b =>
                {
                    b.Property<int>("Payment_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Payment_Id"));

                    b.Property<string>("Card_number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Create_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("Cvv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("User_Id")
                        .HasColumnType("int");

                    b.HasKey("Payment_Id");

                    b.HasIndex("User_Id");

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("Online_sms.Models.Room", b =>
                {
                    b.Property<int>("Room_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Room_Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.HasKey("Room_Id");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("Online_sms.Models.RoomMessage", b =>
                {
                    b.Property<int>("Message_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Message_Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Room_Id")
                        .HasColumnType("int");

                    b.Property<int>("User_Id")
                        .HasColumnType("int");

                    b.HasKey("Message_Id");

                    b.HasIndex("Room_Id");

                    b.HasIndex("User_Id");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("Online_sms.Models.Subscription", b =>
                {
                    b.Property<int>("SubscriptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubscriptionId"));

                    b.Property<int>("ChatLimit")
                        .HasColumnType("int");

                    b.Property<DateTime>("Create_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("enddate")
                        .HasColumnType("datetime2");

                    b.HasKey("SubscriptionId");

                    b.ToTable("Subscriptions");

                    b.HasData(
                        new
                        {
                            SubscriptionId = 1,
                            ChatLimit = 5,
                            Create_at = new DateTime(2024, 7, 10, 10, 52, 36, 74, DateTimeKind.Local).AddTicks(6787),
                            Name = "Chat Free",
                            Price = 0m,
                            enddate = new DateTime(2024, 7, 11, 10, 52, 36, 74, DateTimeKind.Local).AddTicks(6792)
                        },
                        new
                        {
                            SubscriptionId = 2,
                            ChatLimit = -1,
                            Create_at = new DateTime(2024, 7, 10, 10, 52, 36, 74, DateTimeKind.Local).AddTicks(6795),
                            Name = "Unlimited Chat (1 day)",
                            Price = 1m,
                            enddate = new DateTime(2024, 7, 11, 10, 52, 36, 74, DateTimeKind.Local).AddTicks(6796)
                        },
                        new
                        {
                            SubscriptionId = 3,
                            ChatLimit = -1,
                            Create_at = new DateTime(2024, 7, 10, 10, 52, 36, 74, DateTimeKind.Local).AddTicks(6797),
                            Name = "Unlimited Chat (1 month)",
                            Price = 5m,
                            enddate = new DateTime(2024, 8, 10, 10, 52, 36, 74, DateTimeKind.Local).AddTicks(6798)
                        });
                });

            modelBuilder.Entity("Online_sms.Models.User", b =>
                {
                    b.Property<int>("User_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("User_id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("College")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConfirmationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Cuisines")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<string>("Designation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dislikes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fullname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hobbies")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsEmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Likes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("MaritalStatus")
                        .HasColumnType("bit");

                    b.Property<string>("Organisation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone_Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Qualifications")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("School")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sports")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Subcription_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("SubscriptionEndDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SubscriptionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("User_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Work_Status")
                        .HasColumnType("int");

                    b.Property<int>("gender")
                        .HasColumnType("int");

                    b.HasKey("User_id");

                    b.HasIndex("Subcription_id");

                    b.HasIndex("SubscriptionId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            User_id = 1,
                            Address = "3560 Armstrong Well",
                            Balance = 0m,
                            College = "Mayer LLC",
                            CreatedAt = new DateTime(2024, 7, 10, 3, 52, 36, 71, DateTimeKind.Utc).AddTicks(4518),
                            Cuisines = "food",
                            DOB = new DateTime(2024, 7, 10, 10, 52, 36, 71, DateTimeKind.Local).AddTicks(7598),
                            Designation = "1",
                            Dislikes = "quia, voluptatem, aliquam",
                            Email = "ElisabethSr.@gmail.com",
                            Fullname = "Cletus Powlowski",
                            Hobbies = "deserunt, tempora, quisquam",
                            Image = "11.jpg",
                            IsEmailConfirmed = true,
                            Likes = "accusamus, voluptas, pariatur",
                            MaritalStatus = false,
                            Organisation = "Williamson Group",
                            Password = "$2a$12$p6SajsJcQBaDyh2eMg54huGoVjNJxUaiCcDa81dWifXKnAlBbZoVa",
                            Phone_Number = "116-131-4006 x051",
                            Qualifications = "Bachelor's Degree",
                            School = "Sample High School",
                            Sports = "soccer",
                            Subcription_id = 1,
                            SubscriptionEndDate = new DateTime(2024, 7, 11, 10, 52, 36, 71, DateTimeKind.Local).AddTicks(8441),
                            UpdatedAt = new DateTime(2024, 7, 10, 3, 52, 36, 71, DateTimeKind.Utc).AddTicks(4521),
                            User_name = "Velma",
                            Work_Status = 0,
                            gender = 1
                        },
                        new
                        {
                            User_id = 2,
                            Address = "46099 Timmothy Neck",
                            Balance = 0m,
                            College = "Borer, Heaney and Homenick",
                            CreatedAt = new DateTime(2024, 7, 10, 3, 52, 36, 71, DateTimeKind.Utc).AddTicks(8456),
                            Cuisines = "food",
                            DOB = new DateTime(2024, 7, 10, 10, 52, 36, 72, DateTimeKind.Local).AddTicks(1533),
                            Designation = "1",
                            Dislikes = "dolor, tempora, rerum",
                            Email = "LazaroIII@gmail.com",
                            Fullname = "Waylon Smitham",
                            Hobbies = "sit, consequatur, porro",
                            Image = "6.png",
                            IsEmailConfirmed = true,
                            Likes = "modi, nemo, velit",
                            MaritalStatus = false,
                            Organisation = "Runolfsdottir, Feil and Jakubowski",
                            Password = "$2a$12$p6SajsJcQBaDyh2eMg54huGoVjNJxUaiCcDa81dWifXKnAlBbZoVa",
                            Phone_Number = "310-796-7463 x392",
                            Qualifications = "Bachelor's Degree",
                            School = "Sample High School",
                            Sports = "soccer",
                            Subcription_id = 1,
                            SubscriptionEndDate = new DateTime(2024, 7, 11, 10, 52, 36, 72, DateTimeKind.Local).AddTicks(2876),
                            UpdatedAt = new DateTime(2024, 7, 10, 3, 52, 36, 71, DateTimeKind.Utc).AddTicks(8456),
                            User_name = "Rosendo",
                            Work_Status = 0,
                            gender = 2
                        },
                        new
                        {
                            User_id = 3,
                            Address = "2149 Conner Streets",
                            Balance = 0m,
                            College = "Hermiston Group",
                            CreatedAt = new DateTime(2024, 7, 10, 3, 52, 36, 72, DateTimeKind.Utc).AddTicks(2877),
                            Cuisines = "food",
                            DOB = new DateTime(2024, 7, 10, 10, 52, 36, 72, DateTimeKind.Local).AddTicks(7887),
                            Designation = "1",
                            Dislikes = "voluptas, delectus, non",
                            Email = "HarveyV@gmail.com",
                            Fullname = "Dr. Herminio Kunze",
                            Hobbies = "voluptas, omnis, et",
                            Image = "6.png",
                            IsEmailConfirmed = true,
                            Likes = "quidem, omnis, aut",
                            MaritalStatus = false,
                            Organisation = "Konopelski Inc and Sons",
                            Password = "$2a$12$p6SajsJcQBaDyh2eMg54huGoVjNJxUaiCcDa81dWifXKnAlBbZoVa",
                            Phone_Number = "(553)388-7422 x916",
                            Qualifications = "Bachelor's Degree",
                            School = "Sample High School",
                            Sports = "soccer",
                            Subcription_id = 1,
                            SubscriptionEndDate = new DateTime(2024, 7, 11, 10, 52, 36, 72, DateTimeKind.Local).AddTicks(8644),
                            UpdatedAt = new DateTime(2024, 7, 10, 3, 52, 36, 72, DateTimeKind.Utc).AddTicks(2878),
                            User_name = "Winston",
                            Work_Status = 1,
                            gender = 1
                        },
                        new
                        {
                            User_id = 4,
                            Address = "793 Lavonne Mall",
                            Balance = 0m,
                            College = "Heller, Jones and Bins",
                            CreatedAt = new DateTime(2024, 7, 10, 3, 52, 36, 72, DateTimeKind.Utc).AddTicks(8652),
                            Cuisines = "food",
                            DOB = new DateTime(2024, 7, 10, 10, 52, 36, 73, DateTimeKind.Local).AddTicks(1605),
                            Designation = "1",
                            Dislikes = "dolorum, est, ab",
                            Email = "CamilaII@gmail.com",
                            Fullname = "Kaley Walker",
                            Hobbies = "rerum, sed, earum",
                            Image = "7.jpg",
                            IsEmailConfirmed = true,
                            Likes = "ut, placeat, iure",
                            MaritalStatus = false,
                            Organisation = "Reinger, Lakin and Collins",
                            Password = "$2a$12$p6SajsJcQBaDyh2eMg54huGoVjNJxUaiCcDa81dWifXKnAlBbZoVa",
                            Phone_Number = "(865)489-1855 x5812",
                            Qualifications = "Bachelor's Degree",
                            School = "Sample High School",
                            Sports = "soccer",
                            Subcription_id = 1,
                            SubscriptionEndDate = new DateTime(2024, 7, 11, 10, 52, 36, 73, DateTimeKind.Local).AddTicks(2761),
                            UpdatedAt = new DateTime(2024, 7, 10, 3, 52, 36, 72, DateTimeKind.Utc).AddTicks(8652),
                            User_name = "Mackenzie",
                            Work_Status = 2,
                            gender = 1
                        },
                        new
                        {
                            User_id = 5,
                            Address = "5761 Shanelle Valley",
                            Balance = 0m,
                            College = "Becker-Schultz",
                            CreatedAt = new DateTime(2024, 7, 10, 3, 52, 36, 73, DateTimeKind.Utc).AddTicks(2764),
                            Cuisines = "food",
                            DOB = new DateTime(2024, 7, 10, 10, 52, 36, 73, DateTimeKind.Local).AddTicks(5810),
                            Designation = "1",
                            Dislikes = "minus, et, adipisci",
                            Email = "OzellaSr.@gmail.com",
                            Fullname = "Shany Schimmel",
                            Hobbies = "nobis, ea, corrupti",
                            Image = "6.png",
                            IsEmailConfirmed = true,
                            Likes = "consequatur, voluptates, non",
                            MaritalStatus = false,
                            Organisation = "Kovacek LLC",
                            Password = "$2a$12$p6SajsJcQBaDyh2eMg54huGoVjNJxUaiCcDa81dWifXKnAlBbZoVa",
                            Phone_Number = "1-499-037-9087 x876",
                            Qualifications = "Bachelor's Degree",
                            School = "Sample High School",
                            Sports = "soccer",
                            Subcription_id = 1,
                            SubscriptionEndDate = new DateTime(2024, 7, 11, 10, 52, 36, 73, DateTimeKind.Local).AddTicks(6829),
                            UpdatedAt = new DateTime(2024, 7, 10, 3, 52, 36, 73, DateTimeKind.Utc).AddTicks(2764),
                            User_name = "Orval",
                            Work_Status = 2,
                            gender = 0
                        });
                });

            modelBuilder.Entity("Online_sms.Models.Contact", b =>
                {
                    b.HasOne("Online_sms.Models.User", "User")
                        .WithMany("Contacts")
                        .HasForeignKey("User_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Online_sms.Models.Friend", b =>
                {
                    b.HasOne("Online_sms.Models.User", "FriendUser")
                        .WithMany()
                        .HasForeignKey("FriendUserUser_id");

                    b.HasOne("Online_sms.Models.User", "User")
                        .WithMany("Friends")
                        .HasForeignKey("User_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FriendUser");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Online_sms.Models.Payment", b =>
                {
                    b.HasOne("Online_sms.Models.User", "User")
                        .WithMany("Payments")
                        .HasForeignKey("User_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Online_sms.Models.RoomMessage", b =>
                {
                    b.HasOne("Online_sms.Models.Room", "ChatRoom")
                        .WithMany("Messages")
                        .HasForeignKey("Room_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Online_sms.Models.User", "User")
                        .WithMany("Messages")
                        .HasForeignKey("User_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChatRoom");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Online_sms.Models.User", b =>
                {
                    b.HasOne("Online_sms.Models.Subscription", "Subscription")
                        .WithMany()
                        .HasForeignKey("Subcription_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Online_sms.Models.Subscription", null)
                        .WithMany("User")
                        .HasForeignKey("SubscriptionId");

                    b.Navigation("Subscription");
                });

            modelBuilder.Entity("Online_sms.Models.Room", b =>
                {
                    b.Navigation("Messages");
                });

            modelBuilder.Entity("Online_sms.Models.Subscription", b =>
                {
                    b.Navigation("User");
                });

            modelBuilder.Entity("Online_sms.Models.User", b =>
                {
                    b.Navigation("Contacts");

                    b.Navigation("Friends");

                    b.Navigation("Messages");

                    b.Navigation("Payments");
                });
#pragma warning restore 612, 618
        }
    }
}
