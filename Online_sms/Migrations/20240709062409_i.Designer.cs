// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Online_sms.Models;

#nullable disable

namespace Online_sms.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20240709062409_i")]
    partial class i
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Online_sms.Models.Contact", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.HasKey("id");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("Online_sms.Models.Friend", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Accept")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FriendUserUser_id")
                        .HasColumnType("int");

                    b.Property<int>("Friend_Id")
                        .HasColumnType("int");

                    b.Property<int>("User_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FriendUserUser_id");

                    b.HasIndex("User_Id");

                    b.ToTable("Friends");
                });

            modelBuilder.Entity("Online_sms.Models.Payment", b =>
                {
                    b.Property<int>("Payment_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Payment_Id"));

                    b.Property<string>("Card_number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Create_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("Cvv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("User_Id")
                        .HasColumnType("int");

                    b.HasKey("Payment_Id");

                    b.HasIndex("User_Id");

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("Online_sms.Models.Room", b =>
                {
                    b.Property<int>("Room_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Room_Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.HasKey("Room_Id");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("Online_sms.Models.RoomMessage", b =>
                {
                    b.Property<int>("Message_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Message_Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Room_Id")
                        .HasColumnType("int");

                    b.Property<int>("User_Id")
                        .HasColumnType("int");

                    b.HasKey("Message_Id");

                    b.HasIndex("Room_Id");

                    b.HasIndex("User_Id");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("Online_sms.Models.Subscription", b =>
                {
                    b.Property<int>("SubscriptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubscriptionId"));

                    b.Property<int>("ChatLimit")
                        .HasColumnType("int");

                    b.Property<DateTime>("Create_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("enddate")
                        .HasColumnType("datetime2");

                    b.HasKey("SubscriptionId");

                    b.ToTable("Subscriptions");

                    b.HasData(
                        new
                        {
                            SubscriptionId = 1,
                            ChatLimit = 5,
                            Create_at = new DateTime(2024, 7, 9, 13, 24, 8, 731, DateTimeKind.Local).AddTicks(1823),
                            Name = "Chat Free",
                            Price = 0m,
                            enddate = new DateTime(2024, 7, 10, 13, 24, 8, 731, DateTimeKind.Local).AddTicks(1830)
                        },
                        new
                        {
                            SubscriptionId = 2,
                            ChatLimit = -1,
                            Create_at = new DateTime(2024, 7, 9, 13, 24, 8, 731, DateTimeKind.Local).AddTicks(1835),
                            Name = "Unlimited Chat (1 day)",
                            Price = 1m,
                            enddate = new DateTime(2024, 7, 10, 13, 24, 8, 731, DateTimeKind.Local).AddTicks(1836)
                        },
                        new
                        {
                            SubscriptionId = 3,
                            ChatLimit = -1,
                            Create_at = new DateTime(2024, 7, 9, 13, 24, 8, 731, DateTimeKind.Local).AddTicks(1837),
                            Name = "Unlimited Chat (1 month)",
                            Price = 5m,
                            enddate = new DateTime(2024, 8, 9, 13, 24, 8, 731, DateTimeKind.Local).AddTicks(1838)
                        });
                });

            modelBuilder.Entity("Online_sms.Models.User", b =>
                {
                    b.Property<int>("User_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("User_id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("College")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConfirmationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Cuisines")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<string>("Designation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dislikes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fullname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hobbies")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsEmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Likes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("MaritalStatus")
                        .HasColumnType("bit");

                    b.Property<string>("Organisation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone_Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Qualifications")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("School")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sports")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Subcription_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("SubscriptionEndDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SubscriptionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("User_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Work_Status")
                        .HasColumnType("int");

                    b.Property<int>("gender")
                        .HasColumnType("int");

                    b.HasKey("User_id");

                    b.HasIndex("Subcription_id");

                    b.HasIndex("SubscriptionId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            User_id = 1,
                            Address = "7299 Arnold Turnpike",
                            Balance = 0m,
                            College = "Gottlieb, Dietrich and Denesik",
                            CreatedAt = new DateTime(2024, 7, 9, 6, 24, 8, 727, DateTimeKind.Utc).AddTicks(3374),
                            Cuisines = "food",
                            DOB = new DateTime(2024, 7, 9, 13, 24, 8, 727, DateTimeKind.Local).AddTicks(7576),
                            Designation = "1",
                            Dislikes = "quaerat, dignissimos, non",
                            Email = "AldaJr.@gmail.com",
                            Fullname = "Lester Cruickshank",
                            Hobbies = "iusto, et, sunt",
                            Image = "6.png",
                            IsEmailConfirmed = true,
                            Likes = "quibusdam, id, est",
                            MaritalStatus = false,
                            Organisation = "Flatley-West",
                            Password = "$2a$12$p6SajsJcQBaDyh2eMg54huGoVjNJxUaiCcDa81dWifXKnAlBbZoVa",
                            Phone_Number = "847-199-9227 x01637",
                            Qualifications = "Bachelor's Degree",
                            School = "Sample High School",
                            Sports = "soccer",
                            Subcription_id = 1,
                            SubscriptionEndDate = new DateTime(2024, 7, 10, 13, 24, 8, 727, DateTimeKind.Local).AddTicks(9078),
                            UpdatedAt = new DateTime(2024, 7, 9, 6, 24, 8, 727, DateTimeKind.Utc).AddTicks(3382),
                            User_name = "Allie",
                            Work_Status = 1,
                            gender = 1
                        },
                        new
                        {
                            User_id = 2,
                            Address = "4585 Schaefer Turnpike",
                            Balance = 0m,
                            College = "Schamberger Group",
                            CreatedAt = new DateTime(2024, 7, 9, 6, 24, 8, 727, DateTimeKind.Utc).AddTicks(9095),
                            Cuisines = "food",
                            DOB = new DateTime(2024, 7, 9, 13, 24, 8, 728, DateTimeKind.Local).AddTicks(3967),
                            Designation = "1",
                            Dislikes = "temporibus, sed, commodi",
                            Email = "MonserratPhD@gmail.com",
                            Fullname = "Mrs. Johnny Goodwin",
                            Hobbies = "fugiat, sed, ad",
                            Image = "7.jpg",
                            IsEmailConfirmed = true,
                            Likes = "corporis, porro, perspiciatis",
                            MaritalStatus = false,
                            Organisation = "Runolfsdottir-Borer",
                            Password = "$2a$12$p6SajsJcQBaDyh2eMg54huGoVjNJxUaiCcDa81dWifXKnAlBbZoVa",
                            Phone_Number = "1-588-935-8289",
                            Qualifications = "Bachelor's Degree",
                            School = "Sample High School",
                            Sports = "soccer",
                            Subcription_id = 1,
                            SubscriptionEndDate = new DateTime(2024, 7, 10, 13, 24, 8, 728, DateTimeKind.Local).AddTicks(5064),
                            UpdatedAt = new DateTime(2024, 7, 9, 6, 24, 8, 727, DateTimeKind.Utc).AddTicks(9096),
                            User_name = "Dayton",
                            Work_Status = 1,
                            gender = 1
                        },
                        new
                        {
                            User_id = 3,
                            Address = "23829 Ashley Spring",
                            Balance = 0m,
                            College = "Nitzsche LLC",
                            CreatedAt = new DateTime(2024, 7, 9, 6, 24, 8, 728, DateTimeKind.Utc).AddTicks(5073),
                            Cuisines = "food",
                            DOB = new DateTime(2024, 7, 9, 13, 24, 8, 728, DateTimeKind.Local).AddTicks(8313),
                            Designation = "1",
                            Dislikes = "aspernatur, aut, dolore",
                            Email = "JustusIV@gmail.com",
                            Fullname = "Annabel Sipes",
                            Hobbies = "dolorem, ducimus, est",
                            Image = "11.jpg",
                            IsEmailConfirmed = true,
                            Likes = "quidem, qui, necessitatibus",
                            MaritalStatus = false,
                            Organisation = "Rohan, Windler and Heaney",
                            Password = "$2a$12$p6SajsJcQBaDyh2eMg54huGoVjNJxUaiCcDa81dWifXKnAlBbZoVa",
                            Phone_Number = "1-672-962-1072",
                            Qualifications = "Bachelor's Degree",
                            School = "Sample High School",
                            Sports = "soccer",
                            Subcription_id = 1,
                            SubscriptionEndDate = new DateTime(2024, 7, 10, 13, 24, 8, 728, DateTimeKind.Local).AddTicks(9369),
                            UpdatedAt = new DateTime(2024, 7, 9, 6, 24, 8, 728, DateTimeKind.Utc).AddTicks(5073),
                            User_name = "Jordan",
                            Work_Status = 2,
                            gender = 1
                        },
                        new
                        {
                            User_id = 4,
                            Address = "63835 Brock River",
                            Balance = 0m,
                            College = "Weber-Jewess",
                            CreatedAt = new DateTime(2024, 7, 9, 6, 24, 8, 728, DateTimeKind.Utc).AddTicks(9371),
                            Cuisines = "food",
                            DOB = new DateTime(2024, 7, 9, 13, 24, 8, 729, DateTimeKind.Local).AddTicks(3024),
                            Designation = "1",
                            Dislikes = "reprehenderit, itaque, adipisci",
                            Email = "IsomMD@gmail.com",
                            Fullname = "Kennedy Tremblay",
                            Hobbies = "dolores, quia, eaque",
                            Image = "10.png",
                            IsEmailConfirmed = true,
                            Likes = "ullam, facilis, consectetur",
                            MaritalStatus = false,
                            Organisation = "Roberts Inc and Sons",
                            Password = "$2a$12$p6SajsJcQBaDyh2eMg54huGoVjNJxUaiCcDa81dWifXKnAlBbZoVa",
                            Phone_Number = "630-784-8190 x983",
                            Qualifications = "Bachelor's Degree",
                            School = "Sample High School",
                            Sports = "soccer",
                            Subcription_id = 1,
                            SubscriptionEndDate = new DateTime(2024, 7, 10, 13, 24, 8, 729, DateTimeKind.Local).AddTicks(4143),
                            UpdatedAt = new DateTime(2024, 7, 9, 6, 24, 8, 728, DateTimeKind.Utc).AddTicks(9371),
                            User_name = "Kendrick",
                            Work_Status = 1,
                            gender = 2
                        },
                        new
                        {
                            User_id = 5,
                            Address = "117 Flatley Bridge",
                            Balance = 0m,
                            College = "Schiller, Hammes and VonRueden",
                            CreatedAt = new DateTime(2024, 7, 9, 6, 24, 8, 729, DateTimeKind.Utc).AddTicks(4150),
                            Cuisines = "food",
                            DOB = new DateTime(2024, 7, 9, 13, 24, 8, 729, DateTimeKind.Local).AddTicks(7058),
                            Designation = "1",
                            Dislikes = "adipisci, eum, velit",
                            Email = "MicahDVM@gmail.com",
                            Fullname = "Reed Daugherty",
                            Hobbies = "illo, earum, autem",
                            Image = "7.jpg",
                            IsEmailConfirmed = true,
                            Likes = "ad, maxime, velit",
                            MaritalStatus = false,
                            Organisation = "Mayert-Hudson",
                            Password = "$2a$12$p6SajsJcQBaDyh2eMg54huGoVjNJxUaiCcDa81dWifXKnAlBbZoVa",
                            Phone_Number = "1-761-465-5784 x733",
                            Qualifications = "Bachelor's Degree",
                            School = "Sample High School",
                            Sports = "soccer",
                            Subcription_id = 1,
                            SubscriptionEndDate = new DateTime(2024, 7, 10, 13, 24, 8, 729, DateTimeKind.Local).AddTicks(8445),
                            UpdatedAt = new DateTime(2024, 7, 9, 6, 24, 8, 729, DateTimeKind.Utc).AddTicks(4150),
                            User_name = "Kay",
                            Work_Status = 2,
                            gender = 0
                        });
                });

            modelBuilder.Entity("Online_sms.Models.Friend", b =>
                {
                    b.HasOne("Online_sms.Models.User", "FriendUser")
                        .WithMany()
                        .HasForeignKey("FriendUserUser_id");

                    b.HasOne("Online_sms.Models.User", "User")
                        .WithMany("Friends")
                        .HasForeignKey("User_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FriendUser");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Online_sms.Models.Payment", b =>
                {
                    b.HasOne("Online_sms.Models.User", "User")
                        .WithMany("Payments")
                        .HasForeignKey("User_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Online_sms.Models.RoomMessage", b =>
                {
                    b.HasOne("Online_sms.Models.Room", "ChatRoom")
                        .WithMany("Messages")
                        .HasForeignKey("Room_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Online_sms.Models.User", "User")
                        .WithMany("Messages")
                        .HasForeignKey("User_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChatRoom");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Online_sms.Models.User", b =>
                {
                    b.HasOne("Online_sms.Models.Subscription", "Subscription")
                        .WithMany()
                        .HasForeignKey("Subcription_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Online_sms.Models.Subscription", null)
                        .WithMany("User")
                        .HasForeignKey("SubscriptionId");

                    b.Navigation("Subscription");
                });

            modelBuilder.Entity("Online_sms.Models.Room", b =>
                {
                    b.Navigation("Messages");
                });

            modelBuilder.Entity("Online_sms.Models.Subscription", b =>
                {
                    b.Navigation("User");
                });

            modelBuilder.Entity("Online_sms.Models.User", b =>
                {
                    b.Navigation("Friends");

                    b.Navigation("Messages");

                    b.Navigation("Payments");
                });
#pragma warning restore 612, 618
        }
    }
}
